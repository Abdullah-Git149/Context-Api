{"version":3,"sources":["hook/InputHook.jsx","reducer/ContactReducer.jsx","Context/ContactData.jsx","components/ContactForm.jsx","components/ContactDetails.jsx","components/Contacts.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["InputHook","val","useState","state","setState","e","target","value","ContactReducer","action","type","newContact","window","confirm","filter","data","id","ContactData","createContext","ContactDataProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","contacts","dispatch","useEffect","setItem","stringify","Provider","users","children","ContactForm","useContext","name","setName","resetName","email","setEmail","resetEmail","phone","setPhone","resetPhone","RandomNumber","Math","floor","random","onSubmit","preventDefault","className","placeholder","onChange","ContactDetails","user","onClick","Contacts","console","log","lenght","map","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1747c291.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst InputHook = (val) => {\r\n    const [state,setState]= useState(val)\r\n\r\n    const inputField = (e)=>{\r\n        setState(e.target.value)\r\n\r\n    }\r\n    const clearField =()=>{\r\n        setState(\"\")\r\n    }\r\n\r\n    return [state,inputField,clearField]\r\n};\r\n\r\nexport default InputHook;","export const ContactReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CONTACT':\r\n            return [...state, action.newContact]\r\n        case 'REMOVE_DATA':\r\n            if (window.confirm(\"Are you sure\")) {\r\n                const filtered = state.filter((data) => data.id !== action.id)\r\n                return filtered\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React, { createContext, useEffect, useReducer, useState } from 'react';\r\nimport { ContactReducer } from \"../reducer/ContactReducer\"\r\nexport const ContactData = createContext()\r\nconst ContactDataProvider = (props) => {\r\n\r\n    const [contacts, dispatch] = useReducer(ContactReducer, [], () => {\r\n        const localData = localStorage.getItem(\"Contacts\")\r\n        return localData ? JSON.parse(localData) : []\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Contacts\", JSON.stringify(contacts))\r\n    }, [contacts])\r\n\r\n    return (\r\n\r\n        <ContactData.Provider value={{ users: contacts, dispatch }}>\r\n            {props.children}\r\n        </ContactData.Provider>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactDataProvider;","import React, { useContext } from 'react';\r\nimport InputHook from \"../hook/InputHook\"\r\nimport { ContactData } from \"../Context/ContactData\"\r\nconst ContactForm = () => {\r\n\r\n    const { dispatch } = useContext(ContactData)\r\n\r\n    const [name, setName, resetName] = InputHook(\"\")\r\n    const [email, setEmail, resetEmail] = InputHook(\"\")\r\n    const [phone, setPhone, resetPhone] = InputHook(\"\")\r\n    var RandomNumber = Math.floor(Math.random() * 100) + 1;\r\n\r\n\r\n    const addNewContact = (e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            newContact: { id: RandomNumber, name: name, email: email, phone: phone }\r\n        })\r\n        resetName()\r\n        resetEmail()\r\n        resetPhone()\r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={addNewContact}>\r\n                <h3 className=\"mb-5\">Add Contact</h3>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter The Name\"\r\n                        value={name}\r\n                        onChange={setName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter The Email\"\r\n                        value={email}\r\n                        onChange={setEmail} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter The Phone\"\r\n                        value={phone}\r\n                        onChange={setPhone} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Add Contact\"\r\n                        className=\"btn btn-info\"\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React, { useContext } from 'react';\r\nimport { ContactData } from \"../Context/ContactData\"\r\n\r\nconst ContactDetails = ({ user }) => {\r\n    const { dispatch } = useContext(ContactData)\r\n    return (\r\n        <>\r\n\r\n            <td><b> {user.name}</b></td>\r\n            <td>{user.email}</td>\r\n            <td>{user.phone}</td>\r\n            <td><button type=\"button\" className=\"btn btn-danger\"\r\n                onClick={() => dispatch({ type: 'REMOVE_DATA', id: user.id })}>Remove</button></td>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactDetails;","import React, { useContext } from 'react';\r\nimport { ContactData } from \"../Context/ContactData\"\r\nimport ContactDetails from \"./ContactDetails\"\r\nconst Contacts = () => {\r\n    const { users } = useContext(ContactData)\r\n    console.log(users)\r\n    return users.lenght ? <h1>We have data</h1> :\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    users.map((user)=>(\r\n                        <tr key={user.id}>\r\n                            <ContactDetails user={user}/>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n};\r\n\r\nexport default Contacts;","import React, { useContext } from 'react';\r\nimport {ContactData} from \"../Context/ContactData\"\r\n\r\nconst Navbar = () => {\r\n    const data = useContext(ContactData)    \r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">Contacts</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n          \r\n      </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import \"bootswatch/dist/materia/bootstrap.min.css\";\n\nimport './App.css';\nimport ContactForm from \"./components/ContactForm\";\nimport Contacts from \"./components/Contacts\";\nimport Navbar from \"./components/Navbar\";\nimport ContactDataProvider from \"./Context/ContactData\";\n\nfunction App() {\n  return (\n    <div>\n      <ContactDataProvider>\n        <Navbar />\n        <div className=\"container mt-5\">\n       <ContactForm/>\n        <Contacts/>\n        </div>\n      </ContactDataProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}