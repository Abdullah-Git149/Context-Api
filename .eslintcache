[{"E:\\Context Api\\lll\\myapp\\src\\index.js":"1","E:\\Context Api\\lll\\myapp\\src\\reportWebVitals.js":"2","E:\\Context Api\\lll\\myapp\\src\\App.js":"3","E:\\Context Api\\lll\\myapp\\src\\components\\Navbar.jsx":"4","E:\\Context Api\\lll\\myapp\\src\\Context\\ContactData.jsx":"5","E:\\Context Api\\lll\\myapp\\src\\components\\Contacts.jsx":"6","E:\\Context Api\\lll\\myapp\\src\\components\\ContactDetails.jsx":"7","E:\\Context Api\\lll\\myapp\\src\\components\\ContactForm.jsx":"8","E:\\Context Api\\lll\\myapp\\src\\hook\\InputHook.jsx":"9","E:\\Context Api\\lll\\myapp\\src\\reducer\\ContactReducer.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":523,"mtime":1612431793313,"results":"14","hashOfConfig":"12"},{"size":651,"mtime":1612437516504,"results":"15","hashOfConfig":"12"},{"size":739,"mtime":1612436102424,"results":"16","hashOfConfig":"12"},{"size":890,"mtime":1612435611666,"results":"17","hashOfConfig":"12"},{"size":564,"mtime":1612437973472,"results":"18","hashOfConfig":"12"},{"size":2119,"mtime":1612443762417,"results":"19","hashOfConfig":"12"},{"size":326,"mtime":1612432228767,"results":"20","hashOfConfig":"12"},{"size":465,"mtime":1612443824830,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ebhs76",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Context Api\\lll\\myapp\\src\\index.js",[],["46","47"],"E:\\Context Api\\lll\\myapp\\src\\reportWebVitals.js",[],"E:\\Context Api\\lll\\myapp\\src\\App.js",[],"E:\\Context Api\\lll\\myapp\\src\\components\\Navbar.jsx",["48","49"],"import React, { useContext } from 'react';\r\nimport { ContactData } from \"../Context/ContactData\"\r\n\r\nconst Navbar = () => {\r\n    const data = useContext(ContactData)\r\n\r\n    return (\r\n\r\n\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a class=\"navbar-brand\" href=\"#\">Contact Details</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","E:\\Context Api\\lll\\myapp\\src\\Context\\ContactData.jsx",["50"],"import React, { createContext, useEffect, useReducer, useState } from 'react';\r\nimport { ContactReducer } from \"../reducer/ContactReducer\"\r\nexport const ContactData = createContext()\r\nconst ContactDataProvider = (props) => {\r\n\r\n    const [contacts, dispatch] = useReducer(ContactReducer, [], () => {\r\n        const localData = localStorage.getItem(\"Contacts\")\r\n        return localData ? JSON.parse(localData) : []\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Contacts\", JSON.stringify(contacts))\r\n    }, [contacts])\r\n\r\n    return (\r\n\r\n        <ContactData.Provider value={{ users: contacts, dispatch }}>\r\n            {props.children}\r\n        </ContactData.Provider>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactDataProvider;","E:\\Context Api\\lll\\myapp\\src\\components\\Contacts.jsx",[],"E:\\Context Api\\lll\\myapp\\src\\components\\ContactDetails.jsx",[],"E:\\Context Api\\lll\\myapp\\src\\components\\ContactForm.jsx",[],"E:\\Context Api\\lll\\myapp\\src\\hook\\InputHook.jsx",["51"],"import React, { useState } from 'react';\r\n\r\nconst InputHook = (val) => {\r\n    const [state,setState]= useState(val)\r\n\r\n    const inputField = (e)=>{\r\n        setState(e.target.value)\r\n\r\n    }\r\n    const clearField =()=>{\r\n        setState(\"\")\r\n    }\r\n\r\n    return [state,inputField,clearField]\r\n};\r\n\r\nexport default InputHook;","E:\\Context Api\\lll\\myapp\\src\\reducer\\ContactReducer.jsx",["52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":11,"nodeType":"59","messageId":"60","endLine":5,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":11,"column":13,"nodeType":"63","endLine":11,"endColumn":46},{"ruleId":"57","severity":1,"message":"64","line":1,"column":55,"nodeType":"59","messageId":"60","endLine":1,"endColumn":63},{"ruleId":"57","severity":1,"message":"65","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":12,"column":9,"nodeType":"68","messageId":"69","endLine":13,"endColumn":25},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'React' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]